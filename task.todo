My Task:
  ☐ Task 42: Add new form in admin panel for authority management
  ☐ Task 28: Add module for specific user
  ☐ Task 31: Make a beautiful email layout
  ☐ Task 43: Create CRUDS for authority and authority_groups
  ☐ Task 44: Create a authority checker to be use by controllers
  ☐ Task 45: Add family - form validation
  ☐ Task 46: Add employee - form validation
  ☐ Task 47: Contact, Tin, SSS, philhealth and Pag-ibig formatting
  ☐ Task 48: On edit user profile, add new field which add authority if the currently loggedin user is the HR or has the authority of HR
  ☐ Task 49: Remove temporary the panel settings


Log:
  ☐ Create preloader too
  ☐ Try fetch as replacement to ajax
  ☐ recruitment/list-department add a dynamic form using this http://jsfiddle.net/UeSsu/1/
  ☐ What if there are many admin registered, how to handle them?
  ☐ Add new admin
  ☐ Convert a user to an admin
  ☐ Try using this https://packagist.org/packages/jolicode/jolinotif
  ☐ Study more on Eloquent relationship
  ☐ List of all employee - action
  ☐ List of employee by department
  ☐ List of employee by position
  ☐ Add employee - success alert
  ☐ Add employee - login check
  ☐ Refer 1: Go to this line an the example are here
  ☐ Add close option on profile welcome card
  ☐ Dashboard sidebar should toggle
  ☐ Automatic Capitalize in the browser side
  ☐ change profile picture
  ☐ On payroll HR should be able to sort, undertime, absent, etc
  ☐ On the user perpective upon viewing profile, disable email, department, position, and government data
  ☐ Display the loggedin details last login
  ☐ Use sweetalert on add department
  ☐ Task 2: Add department - Form validation
  ☐ Task 9: Need a hover effect of department list action column
  ☐ Task 10: Need a hover effect of position list action column
  ☐ Task 13: Sidebar module for admin
  ☐ Task 14: Delete module
  ☐ Task 15: Edit sub-module
  ☐ Task 16: Delete sub-module
  ☐ Task 17: Add new sub-module must have a list of routes
  ☐ Task 22: Add position should check if already exist

DONE:
  ✔ Task 51: Perform the validation of the value of the input field for changing the user password @done(2017-06-16 01:11) @project(My Task)
  ✔ Task 50: Create a change password function @done(2017-06-16 00:29) @project(My Task)
  ✔ Task 41: Create autority and authority_groups tables for the users authority @done(2017-06-15 12:35) @project(My Task)
  ✔ Task 40: Add new input field in edit profile to change user password @done(2017-06-15 23:57) @project(My Task)
  ✔ Task 39: Fetch the data of users education to be edit @done(2017-06-15 09:51) @project(Sprint 10)
  ✔ Task 38: Update/Add Education @done(2017-06-15 09:51) @project(Sprint 10)
  ✔ Task 37: Update/Add Family @done(2017-06-14 13:43) @project(Sprint 10)
  ✔ Task 36: Fetch the data of the Family to be edit @done(2017-06-15 09:10) @project(Sprint 10)
  ✔ Task 35: Add new field in the users table called wesbite or url - Refer Issue: 32 @done(2017-06-15 23:44) @project(My Task)
  ✔ Task 34: Fetch some of the user information to be display in user profile @done(2017-06-14 12:02) @project(Sprint 10)
  ✔ Task 33: Fetch the user information from the database to be edit @done(2017-06-14 13:41) @project(Sprint 10)
  ✔ Task 32: Make edit functionality for list of users in the user table @done(2017-06-15 12:19) @project(My Task)
  ✔ Task 30: Add color picker on recruitment/add-department @done(2017-06-15 23:31) @project(My Task)
  ✔ Task 29: Make email to the user after a successful registration @done (6/13/2017, 12:41:07 PM)
  ✔ Task 27: recruitment/list-department add plus icon for adding position @done(2017-06-12 20:53) @project(Sprint 10)
  ✔ Task 26: On recruitment/add there should be show employees button @done(2017-06-12 20:51) @project(Sprint 10)
  ✔ Task 25: On recruitment/add create a city and country look up use for dropdown in adding new employee @done(2017-06-12 20:46) @project(Sprint 10)
  ✔ Task 24: On recruitment/add, on click the dropdown department options, a position under it should be fetch and display as a position in position select @done(2017-06-12 20:28) @project(Sprint 10)
  ✔ Task 23: Add breadcrumb for admin pages @done(2017-06-15 18:27) @project(My Task)
  ✔ Task 21: Delete position on modal will flood all position after @done(2017-06-10 20:04) @project(Sprint 8 Department)
  ✔ Task 20: Check the delete position functionality @done(2017-06-10 20:18) @project(Sprint 8 Department)
  ✔ Task 19: on delete department Use sweetalert @done(2017-06-10 19:49) @project(Sprint 8 Department)
  ✔ Task 18: Add breadcrumb for user pages @done(2017-06-11 08:17) @project(Sprint 9 Department)
  ✔ Task 12: Edit department name @done(2017-06-10 18:14) @project(Sprint 8 Department)
  ✔ Task 11: Add color picker for on department color @done(2017-06-10 18:28) @project(Sprint 8 Department)
  ✔ Task 8: Before deleting a department, check if it has a position @done(2017-06-10 19:50) @project(Sprint 8 Department)
  ✔ Task 7: Check the department if already exist before adding new @done(2017-06-11 07:46) @project(Sprint 8 Department)
  ✔ Task 6: Delete department @done(2017-06-10 19:50) @project(Sprint 8 Department)
  ✔ Task 5: List of department - action @done(2017-06-10 18:55) @project(Sprint 8 Department)
  ✔ Task 4: Optimize the ajax in apps.js @done(2017-06-10 18:28) @project(Sprint 8 Department)
  ✔ Task 3: On edit position, can cancel the edit @done(2017-06-10 08:46) @project(Sprint 8)
  ✔ Task 1: Size of the edit form should be 100% @done(2017-06-10 08:46) @project(Sprint 8)

Sprint 1: Basic Forms
  ✔ Add employee @done (5/18/2017, 10:28:40 AM)
  ✔ Add family @done(2017-05-18 11:30)
  ✔ Add department @done(2017-05-18 12:44)
  ✔ Add position @done(2017-05-18 18:40)
  ✔ Course dropdown @done(2017-05-20 11:29)
  ✔ Level dropdown @done(2017-05-20 13:51)
  ✔ Address dropdown @done(2017-05-20 15:32)
  ✔ Add Education of user @done(2017-05-20 15:32)
  ✔ Edit Profile @done(2017-05-20 15:32)

Sprint 2: Display the data
  ✔ List of department @done(2017-05-20 17:29)
  ✔ List of department color @done(2017-05-21 17:12)
  ✔ List of all employee @done(2017-05-21 17:44)
  ✔ List of all position @done(2017-05-21 18:02)

Sprint 3: DataTables
  ✔ Working with dataTables on list of positions @done(2017-05-21 23:25)
  ✔ DataTables for department list @done(2017-05-22 11:07)
  ✔ DataTables for the list of employee @done(2017-05-22 11:09)

Sprint 4: Admin Dashboard
  ✔ Admin add new moddule @done(2017-05-25 10:50)
  ✔ Admin display table of module @done(2017-05-25 10:50)
  ✔ Admin add new sub module @done(2017-05-26 07:43)
  ✔ Admin display sub module @done(2017-05-26 07:43)
  ✔ Admin display table of positions  @done(2017-05-26 07:44)
  ✔ Display sub-module of a module @done(2017-05-27 11:57)
  ✔ Display breadcrumb in the sub-module @done(2017-05-27 11:57)
  ✔ Add a sub-module to a module @done(2017-05-27 15:07)
  ✔ Admin assign positions to module @done(2017-05-29 10:58)
  ✔ On the http://mpci-vo.dev/admin/submodules/list/1 display the position currently assign in module @done(2017-05-29 10:58)
  ✔ Login checker @done(2017-05-30 06:09)
  ✔ How to add position in module? @done(2017-05-30 06:59)

Sprint 5: Sidebar
  ✔ Module table - add new in modal @done(2017-05-30 06:36) @project(Sprint 5)
  ✔ Module table - show all sub-modules in modal @done(2017-05-30 06:48) @project(Sprint 5)

Sprint 6: Sidebar module outline
  ✔ Display the module and sub-modules on sidebar @done(2017-06-04 12:03)
    ✔ Update Module @done(2017-06-04 12:03)
    ✔ Report module on sidebar should always be in sidebar whatever is the account @done(2017-06-04 10:27)
    ✔ Work on routes @done(2017-06-04 00:20)
    ✔ Change the sidebar icons base on sidebar name @done(2017-06-03 11:13)
    ✔ Get module icons @done(2017-06-03 11:13) @project(☐ Change the sidebar icons base on sidebar name)
    ✔ Get User Position @done(2017-06-01 11:30) @project(Sprint 5)
    ✔ Get Sub-Modules base on Modules @done(2017-06-01 11:30) @project(Sprint 5)
    ✔ Get Module base on position @done(2017-06-03 09:57) @project(Sprint 5)
    ✔ Add created_at and updated_at on seeder @done(2017-06-03 09:57) @project(Sprint 5)
    ✔ Add icon colum in module table @done(2017-06-03 09:57) @project(Sprint 5)
    ✔ Create a sub-modules seeder again @done(2017-06-03 23:49)

Sprint 7: Positions
  ✔ List of all position filter by deparment @done(2017-06-04 18:52) @project(Sprint 7)
  ✔ Add new position @done(2017-06-06 10:12) @project(Sprint 7)
  ✔ Add new position - check if the position already exist @done(2017-06-06 10:25) @project(Sprint 7)
  ✔ Edit position @done(2017-06-07 09:45) @project(Sprint 7 Positions)
  ✔ List of position by department should have dataTables @done(2017-06-07 11:09) @project(Sprint 7 Positions)
  ✔ Delete position @done(2017-06-07 11:49) @project(Sprint 7 Positions)
  ✔ Delete position - update the list @done(2017-06-07 12:13) @project(Sprint 7 Positions)
  ✔ Issue 1: recruitment/list-position has a conflict in delete, cannot get list of position by department since this page is the list of all positions, this should be in deffirent approach, change the class="name" in delete icon. @done(2017-06-08 11:51) @project(Sprint 7 Positions)
  ✔ Issue 2: Delete position on HR, will not update the list correctly @done(2017-06-08 10:41) @project(Sprint 7 Positions)
  ✔ Issue 3: List of positions in Human Resource Department data-tables not working @done(2017-06-09 11:29) @project(Sprint 7 Positions)
  ✔ Issue 4: Delete position on modal does not update the list @done(2017-06-10 07:44) @project(Sprint 7 Positions)
